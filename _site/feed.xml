<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>潘柏信</title>
    <description>欢迎来到我的个人站~</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 06 Feb 2021 22:28:26 +0800</pubDate>
    <lastBuildDate>Sat, 06 Feb 2021 22:28:26 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>区块链(BlockChain)</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-7_blockchain.jpg&quot; alt=&quot;BLOCK CHAIN&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;一、区块链的本质&quot;&gt;&lt;a href=&quot;#一、区块链的本质&quot; class=&quot;headerlink&quot; title=&quot;一、区块链的本质&quot;&gt;&lt;/a&gt;一、区块链的本质&lt;/h3&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;区块链是一种特殊的分布式数据库。&lt;/strong&gt;&lt;br /&gt;
&amp;emsp;&amp;emsp;区块链的主要作用是存储信息。任何需要保存的信息，都可以写入区块链，也可以从里面读取，所以它是数据库。其实，任何人都可以架设服务器，加入到区块链网络，成为一个节点。区块链的世界里面，没有中心节点，每个节点都是平等的，都保存着整个数据库。你可以向任何一个节点，写入\读取数据，因为所有节点最后都会同步，保证区块链一致。&lt;/p&gt;

&lt;h3 id=&quot;二、区块链的特点&quot;&gt;&lt;a href=&quot;#二、区块链的特点&quot; class=&quot;headerlink&quot; title=&quot;二、区块链的特点&quot;&gt;&lt;/a&gt;二、区块链的特点&lt;/h3&gt;
&lt;p&gt;

&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-7_distributedstorage.jpg&quot; alt=&quot;分布式存储&quot; title=&quot;分布式存储&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;分布式数据库并非新发明，市场上早有此类产品。但是，区块链有一个革命性特点。&lt;strong&gt;&lt;font color=&quot;#DC143C&quot;&gt;区块链没有管理员，它是一个彻底无中心的&lt;/font&gt;&lt;/strong&gt;。其他的数据库都有管理员，但是区块链没有。如果有人想对区块链添加审核，也实现不了，因为它的设计就是防止出现居于中心地位的管理当局。正是因为无法管理，区块链才能做到无法被控制。否则一旦大公司大集团控制了管理权，他们就会控制整个平台，其他使用者就都必须听命于他们了。但是，没了管理员，人人都可以往里面写入数据，怎么才能保证数据是可信的呢？被坏人改了怎么办？&lt;/p&gt;

&lt;h3 id=&quot;三、区块&quot;&gt;&lt;a href=&quot;#三、区块&quot; class=&quot;headerlink&quot; title=&quot;三、区块&quot;&gt;&lt;/a&gt;三、区块&lt;/h3&gt;

&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-7_block.jpg&quot; width=&quot;50%&quot; height=&quot;50%&quot; alt=&quot;区块&quot; title=&quot;区块&quot; /&gt;&lt;/center&gt;

&lt;p&gt;
&amp;emsp;&amp;emsp;区块链由一个个区块（block）组成。区块很像数据库的记录，每次写入数据，就是创建一个区块。

&lt;pre&gt;&lt;code&gt;* 每个区块包含两个部分。
    - 区块头（Head): 记录当前区块的特征值。
    - 区块体（Body): 实际数据。
* 区块头包含了当前区块的多项特征值。
    - 生成时间
    - 实际数据（即区块体）的哈希
    - 上一个区块的哈希
    - 。。。
&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-7_blockstructure.jpg&quot; width=&quot;30%&quot; height=&quot;30%&quot; alt=&quot;区块内部组成&quot; title=&quot;区块内部组成&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;所谓“哈希”就是计算机可以对任意内容，计算出一个长度相同的特征值。区块链的哈希长度是256位，这就是说，不管原始内容是什么，最后都会计算出一个256位的二进制数字。而且可以保证，只要原始内容不同，对应的哈希值一定不相同（概率极低）。&lt;br /&gt;

&amp;emsp;&amp;emsp;因此，就有了两个重要的推论。
&lt;pre&gt;&lt;code&gt;
- 每个区块的哈希都是不一样的，可以通过哈希标识区块。
- 如果区块的内容变了，它的哈希一定会变。
&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h3 id=&quot;四、区块Hash&quot;&gt;&lt;a href=&quot;#四、区块Hash&quot; class=&quot;headerlink&quot; title=&quot;四、区块Hash&quot;&gt;&lt;/a&gt;四、区块Hash&lt;/h3&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;每个区块的哈希都是针对“区块头”计算的。也就是说，把区块头的各项特征值，按照顺序连接在一起，组成一个很长做的字符串，再对这个字符串计算哈希。区块哈希的计算公式为：&lt;br /&gt;    
&lt;center&gt;Hash = SHA256(Block Head)&lt;/center&gt;&lt;br /&gt;
&amp;emsp;&amp;emsp;其中，&lt;font color=&quot;#ADFF2F&quot;&gt;SHA256&lt;/font&gt;是区块链所使用的哈希算法。这个公式里面只包含区块头，不包含去块体，也就是说，哈希有区块头唯一决定。&lt;/p&gt;

&lt;h3 id=&quot;五、Hash的不可修改性&quot;&gt;&lt;a href=&quot;#五、Hash的不可修改性&quot; class=&quot;headerlink&quot; title=&quot;五、Hash的不可修改性&quot;&gt;&lt;/a&gt;五、Hash的不可修改性&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;区块头包含很多内容，其中有当前区块体的hash，还有上一个区块的hash。这就意味着，如果当前区块体的内容变了，或者上一个区块的hash变了，一定会引起当前区块的hash改变。&lt;br /&gt;

&amp;emsp;&amp;emsp;如果有人修改了一个区块，该区块的哈希就变了。为了让后面的区块还能连到它（因为下一个区块包含上一个区块的哈希），该人必须依次修改后面所有的区块，否则被改掉的区块就脱离区块链了。由于后面要提到的原因，哈希的计算很耗时，短时间内修改多个区块几乎不可能发生，除非有人掌握了全网51%以上的计算能力。&lt;br /&gt;

&amp;emsp;&amp;emsp;正是通过这种联动机制，区块链保证了自身的可靠性，数据一旦写入，就无法被篡改。这就像历史一样，发生了就是发生了，从此再无法改变。
&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-7_block-chain.jpg&quot; alt=&quot;区块链&quot; title=&quot;区块链&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;每个区块都连着上一次区块，这也是“区块链”这个名字的由来。&lt;/p&gt;

&lt;h3 id=&quot;六、采矿&quot;&gt;&lt;a href=&quot;#六、采矿&quot; class=&quot;headerlink&quot; title=&quot;六、采矿&quot;&gt;&lt;/a&gt;六、采矿&lt;/h3&gt;&lt;p&gt;

&amp;emsp;&amp;emsp;由于必须保证节点之间的同步，所以新区块的添加速度不能太快。试想一下，你刚刚同步了一个区块，准备基于它生成下一个区块，但这时别的节点又有新区块生成， 你不得不放弃做了一半的计算，再次去同步。因为每个区块的后面，只能跟着一个区块，你永远只能在最新区块的后面生成下一个区块。所以，你别无选择，一听到信号，就必须立刻同步。&lt;br /&gt;

&amp;emsp;&amp;emsp;所以，区块链的发明者中本聪故意让添加新区块，变得很困难。他的设计是，平均每10分钟，全网才能生成一个新区块，一小时也就六个。&lt;br /&gt;

&amp;emsp;&amp;emsp;这种产出速度不是通过命令达成的，而是故意设置了海量的计算。也就是时候，只有通过极其大量的计算，才能得到当前区块的有效哈希，从而把新区块添加到区块链。由于计算量太大，所以快不起来。&lt;br /&gt;

&amp;emsp;&amp;emsp;这个过程叫做采矿(mining)，因为计算有效哈希的难度，好比在全世界的沙子里面，找到一粒符合条件的沙子。计算哈希的机器就叫做矿机，操作矿机的人就叫做旷工。&lt;/p&gt;

&lt;h3 id=&quot;七、难度系数&quot;&gt;&lt;a href=&quot;#七、难度系数&quot; class=&quot;headerlink&quot; title=&quot;七、难度系数&quot;&gt;&lt;/a&gt;七、难度系数&lt;/h3&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;不是任意一个哈希都可以，只有满足条件的哈希才会被区块链接受。这个条件特别苛刻，使得绝大部分哈希都不满足要求，必须重算。区块头包含一个难度系数(difficulty)，这个值决定了计算哈希的难度。举例来说，第100000个区块的难度系数是14484.16236122。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-8_difficultycoeff-1.jpg&quot; alt=&quot;难度系数&quot; title=&quot;难度系数&quot; /&gt;&lt;/center&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;区块链协议规定，使用一个常量除以难度系数，可以得到目标值(target)。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-8_difficultycoeff-2.jpg&quot; alt=&quot;难度系数计算公式&quot; title=&quot;难度系数计算公式&quot; /&gt;&lt;/center&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;显然，难度系数越大，目标值就越小。

&lt;br /&gt;&amp;emsp;&amp;emsp;哈希的有效性跟目标值密切相关，只有小于目标值的哈希才是有效的，否则哈希无效，必须重算。由于目标值非常小，哈希小于该值的机会极其渺茫，可能计算10亿次，才能中一次。这就是采矿如此之慢的根本原因。前面说过，当前区块的哈希由区块头唯一决定。如果要对同一个区块反复计算哈希，就意味着，区块头必须不停地变化，否则不可能算出不一样的哈希。区块头里面所有的特征值都是固定的，为了让区块头发生变化，中本聪故意增加了一个随即向，叫做Nonce。Nonce是一个随机值，矿工的作用其实就是猜出Nonce的值，是的区块头的哈希可以小于目标值，从而能够写入区块链。Nonce是非常难猜的，目前只能通过穷举法一个个试错。根据协议，Nonce是一个32位的二进制值，即最大可以到21.47亿。第10000个区块的Nonce值是274148111，可以理解成，矿工从0开始，一直计算了2.74亿次，才得到了一个有效的Nonce值，是的算出的哈希能够满足条件。运气好的话，也许一会儿就找到了Nonce。运气不好的话，可能算完了21.47亿次，都没有发现Nonce，即当前去块体不可能算出满足条件的哈希。这时，协议允许矿工改变区块体，开始新的计算。&lt;/p&gt;

&lt;h3 id=&quot;八、难度系数的动态调节&quot;&gt;&lt;a href=&quot;#八、难度系数的动态调节&quot; class=&quot;headerlink&quot; title=&quot;八、难度系数的动态调节&quot;&gt;&lt;/a&gt;八、难度系数的动态调节&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;

正如上一节所说，采矿具有随机性，没法保证正好十分钟产出一个区块，有时一分钟就算出来啦，有时几个小时可能也没有结果。总体来看，随着硬件设备的提升，以及矿机的数量增长，计算速度一定会越来越快。&lt;br /&gt;

&amp;emsp;&amp;emsp;为了将产出速率恒定在十分钟，中本聪还设计了难度系数的动态调节机制。他规定，难度系数每两周（2016个区块）调整一次。如果这两周里面，区块的平均生成速度是9分钟，就意味着比法定速度快了10%，因此接下来的难度系数就要调高10%；如果平均生成速度是11分钟，就意味着比法定速度慢了10%，因此接下来的难度系数就要调低10%。难度系数越调越高（目标值越来越小），导致了采矿越来越难。&lt;/p&gt;

&lt;h3 id=&quot;九、区块链的分叉&quot;&gt;&lt;a href=&quot;#九、区块链的分叉&quot; class=&quot;headerlink&quot; title=&quot;九、区块链的分叉&quot;&gt;&lt;/a&gt;九、区块链的分叉&lt;/h3&gt;&lt;p&gt;

&amp;emsp;&amp;emsp;即使区块链是可靠的，现在还有一个问题没有解决：如果两个人同时向区块链写入数据，也就是说，同时有两个区块加入，因为它们都连着前一个区块，就形成了分叉。这时应该采纳哪一个区块呢？&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-8_fencha-1.jpg&quot; alt=&quot;分叉现象&quot; title=&quot;分叉现象&quot; /&gt;&lt;/center&gt;&lt;br /&gt;

&amp;emsp;&amp;emsp;现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-8_fencha-2.jpg&quot; alt=&quot;正宗区块链的确定&quot; title=&quot;正宗区块链的确定&quot; /&gt;&lt;/center&gt;&lt;br /&gt;

&amp;emsp;&amp;emsp;由于新区块的生成速度由计算能力决定，所以这条规则就是说，拥有大多数计算能力的那条分支，就是正宗的区块链。&lt;/p&gt;

&lt;h3 id=&quot;十、总结&quot;&gt;&lt;a href=&quot;#十、总结&quot; class=&quot;headerlink&quot; title=&quot;十、总结&quot;&gt;&lt;/a&gt;十、总结&lt;/h3&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;区块链作为无人管理的分布式数据库，从2009年开始已经运行了8年，没有出现大的问题。这证明它是可行的。;但是，为了保证数据的可靠性，区块链也有自己的代价。一是效率，数据写入区块链，最少要等待十分钟，所有节点都同步数据，则需要更多的时间；二是能耗，区块的生成需要矿工进行无数无意义的计算，这是非常耗费能源的。因此，区块链的适用场景，其实非常有限。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
1. 不存在所有成员都信任的管理当局；
2. 写入的数据不要求实时使用；
3. 挖矿的收益能够弥补本身的成本。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;

&amp;emsp;&amp;emsp;如果无法满足上述的条件，那么传统的数据库是更好的解决方案。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/2018-3-8_blockchain-choosen.jpg&quot; alt=&quot;区块链技术的抉择&quot; title=&quot;区块链技术的抉择&quot; /&gt;&lt;/center&gt;&lt;br /&gt;

&amp;emsp;&amp;emsp;目前，区块链最大的应用场景（可能也是唯一的应用场景），就是以比特币为代表的加密货币。&lt;/p&gt;


&lt;p&gt;本篇博文借鉴&lt;br /&gt;
&lt;a href=&quot;http://www.ruanyifeng.com/blog/2017/12/blockchain-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;区块链入门教程&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://mp.weixin.qq.com/s/doekBC8dy8Os4GgwdhQQPQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;看完此文再不懂区块链算我输，用Python从零开始创建区块链&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Mar 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/03/BlockChain/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/03/BlockChain/</guid>
        
        
      </item>
    
      <item>
        <title>Markdown实践</title>
        <description>&lt;h2 id=&quot;什么是-markdown&quot;&gt;什么是 Markdown&lt;/h2&gt;

&lt;p&gt;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：如您正在阅读的这篇文章。它使用简单的符号标记不同的标题，分割不同的段落，&lt;strong&gt;粗体&lt;/strong&gt; 或者 &lt;em&gt;斜体&lt;/em&gt; 某些文字.&lt;/p&gt;
&lt;p&gt;
&amp;emsp;&amp;emsp;This blog is edited in &lt;strong&gt;Sublime&lt;/strong&gt;，support for &lt;em&gt;MarkDown&lt;/em&gt; preview. &lt;center&gt;新垣结衣&lt;/center&gt;

&lt;blockquote&gt;你站在这里别动，我去给你买些橘子。&lt;/blockquote&gt;

&lt;blockquote&gt;
笔落惊风雨，&lt;br /&gt;诗成泣鬼神。
&lt;/blockquote&gt;

&lt;/p&gt;
&lt;p&gt;　　&lt;/p&gt;
&lt;h2 id=&quot;基本语法&quot;&gt;基本语法&lt;/h2&gt;

&lt;p&gt;标题          &lt;br /&gt;
H1 :# Header 1          &lt;br /&gt;
H2 :## Header 2         &lt;br /&gt;
H3 :### Header 3         &lt;br /&gt;
H4 :#### Header 4         &lt;br /&gt;
H5 :##### Header 5          &lt;br /&gt;
H6 :###### Header 6    &lt;br /&gt;
链接 :&lt;a href=&quot;URL&quot;&gt;Title&lt;/a&gt;      &lt;br /&gt;
加粗 :&lt;strong&gt;Bold&lt;/strong&gt;      &lt;br /&gt;
斜体字 :&lt;em&gt;Italics&lt;/em&gt;       &lt;br /&gt;
*删除线 :&lt;del&gt;text&lt;/del&gt;        &lt;br /&gt;
内嵌代码 : &lt;code class=&quot;highlighter-rouge&quot;&gt;alert('Hello World');&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;列表&quot;&gt;列表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
* tuesday
* wednesday
* thursday
- friday
- saturday
- sunday
1.C++&lt;br /&gt;
2.Java&lt;br /&gt;
3.Python&lt;br /&gt;
4.Scala&lt;br /&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;tuesday&lt;/li&gt;
  &lt;li&gt;wednesday&lt;/li&gt;
  &lt;li&gt;thursday&lt;/li&gt;
  &lt;li&gt;friday&lt;/li&gt;
  &lt;li&gt;saturday&lt;/li&gt;
  &lt;li&gt;sunday&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.C++&lt;br /&gt;
2.Java&lt;br /&gt;
3.Python&lt;br /&gt;
4.Scala&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;列表引用&quot;&gt;列表引用&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;列表1&lt;/li&gt;
    &lt;li&gt;列表2&lt;/li&gt;
    &lt;li&gt;列表3&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;插入一张图片&quot;&gt;插入一张图片&lt;/h3&gt;

&lt;p&gt;打赏一个吧&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/payimg/weipayimg.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/highflykxf/blog_resources/master/entertainment/funny_1.jpg&quot; alt=&quot;人生苦多，多coding&quot; title=&quot;人生苦多，多coding&quot; /&gt;&lt;/center&gt;

&lt;p&gt;css 的大部分语法同样可以在 markdown 上使用，但不同的渲染器渲染出来的 markdown 内容样式也不一样，下面这些链接里面有 markdown 基本语法，你也可以在下面几个平台上尝试着写一些。&lt;/p&gt;

&lt;h2 id=&quot;博客支持的高级语法&quot;&gt;博客支持的高级语法&lt;/h2&gt;

&lt;h3 id=&quot;1-制作一份待办事宜&quot;&gt;1. 制作一份待办事宜&lt;/h3&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;支持以 PDF 格式导出文稿&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;新增 Todo 列表功能&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;修复 图标功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-高亮一段代码&quot;&gt;2. 高亮一段代码&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;print &amp;quot;coding...&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requires_authorization&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SomeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# A comment
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-绘制表格&quot;&gt;3. 绘制表格&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;| Src       | Desc      |  Cost |
| ----------| :--------:|------:|
| Beijing   | Nanjing   | 148.5 |
| Beijing   | Xinxiang  | 81.5  |
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Src&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Desc&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Cost&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Beijing&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Nanjing&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$148.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Beijing&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Xinxiang&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$81.5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;本篇博客借鉴&lt;br /&gt;
&amp;emsp;&amp;emsp;&lt;a href=&quot;http://www.jianshu.com/p/1e402922ee32/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown——入门指南&lt;/a&gt;&lt;br /&gt;
&amp;emsp;&amp;emsp;&lt;a href=&quot;http://www.cnblogs.com/james-lee/p/6847906.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sublime Text3 + Markdown + 实时预览&lt;/a&gt;&lt;br /&gt;
&amp;emsp;&amp;emsp;&lt;a href=&quot;http://www.jianshu.com/p/q81RER&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;献给写作者的 Markdown 新手指南&lt;/a&gt;
&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Dec 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/12/MdLearning/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/MdLearning/</guid>
        
        <category>markdown</category>
        
        
      </item>
    
      <item>
        <title>搭建博客github+hexo</title>
        <description>&lt;h2 id=&quot;常用命令&quot;&gt;常用命令:&lt;/h2&gt;

&lt;pre&gt;
    hexo new “post_name”–create post or article
    hexo new page “page_name”–create page
    hexo new draft “draft_name”–crate new draft
    hexo publish [layout] –change draft to article or page
    hexo generate–create static file
    hexo server–open local web server
    key combinations
    hexo d -g #create deploy
    hexo s -g #create preview
&lt;/pre&gt;

&lt;h2 id=&quot;博客构建流程&quot;&gt;博客构建流程&lt;/h2&gt;

&lt;h3 id=&quot;step-1-install-nodejs-and-hexo&quot;&gt;step 1: install Node.js and hexo&lt;/h3&gt;
&lt;pre&gt;
    (1) verify the installtion of node.js
        node -v
    (2) download and install hexo
        npm install -g hexo-cli(npm install hexo-cli -g)
        verify: hexo -v
    (3) initial hexo and create website homepage
        hexo init blog_name
        cd blog_name
        npm install
        hexo g #hexo generate(Explanation: generate static files, create a new folder called “public”)
        hexo s #hexo server (Exp: open the local web server, preview the blog. Visit blog by &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://localhost:4000&lt;/a&gt;)
&lt;/pre&gt;

&lt;h3 id=&quot;step-2-set-theme&quot;&gt;step 2: set theme&lt;/h3&gt;
&lt;pre&gt;
    (1) install theme
        git clone &lt;a href=&quot;https://github.com/litten/hexo-theme-yilia.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/litten/hexo-theme-yilia.git&lt;/a&gt; themes/yilia
    (2) enable theme
        set the attribution value of theme in file “_config.yml” as “yilia”
    (3) update theme
        cd themes/yilia
        git pull
        hexo -s g
&lt;/pre&gt;

&lt;h3 id=&quot;step-3-deploy-hexo-to-github-page&quot;&gt;step 3: deploy hexo to github page&lt;/h3&gt;
&lt;pre&gt;
    (1) install the github extension of hexo
        npm install hexo-deployer-git –save
    (2) modify the configuration file
        deploy:
          type: git
          repo: git@github.com:your_name/your_name.github.io.git
          branch: master
&lt;/pre&gt;
</description>
        <pubDate>Fri, 15 Dec 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/12/github&hexo/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/github&hexo/</guid>
        
        
      </item>
    
  </channel>
</rss>
